
1. Register
 <input type="hidden" id="woocommerce-register-nonce" name="woocommerce-register-nonce" value="656055dd4d"/>

2. Login
 <input type="hidden" id="woocommerce-login-nonce" name="woocommerce-login-nonce" value="7210ddc812"/>

-----------------------------------
Programming language - Java
IDE - Eclipse
------------------------------
Automation testing tool - Selenium WebDriver API
Practice Website - Tutor website (https://askomdch.com/)
------------------------------
Design pattern - Page Object Model
OOPS - 
	Inheritance (Every Test extends Base Test)
	Encapsulation
		private By storeMenuLink=By.xpath("//li[@id='menu-item-1227']//a");	
--------------
Fluent Interface
		public StorePage clickStoreMenuLink() {
		driver.findElement(storeMenuLink).click();
		return new StorePage(driver);
	}
----------------
Builder Pattern
	Chain the methods
----------------
Page Objects
	Structural --> 2 methods - fill and click
	Functional --> 1 method - fill and click
----------------
De-Serialization (JSON to Java object)
			/* myBillingAddress.json --> has to be present under src/test/resources */
		InputStream is = getClass().getClassLoader().getResourceAsStream("myBillingAddress.json");
		BillingAddress billingAddress= new BillingAddress();
		billingAddress= JacksonUtils.deSerializationJSON(is, new BillingAddress());

----------------
Most important:
	1. Atomic test cases
----------------
New ways:
	1. Method to check whether Page is loaded or not - isLoaded() : Many ways 
	2. Browser value -> From TestNG.xml and Maven command line
		browser = System.getProperty("browser", browserFromTestNG);
	3. TestNG.xml file selection
		Using Maven cmd line (mvn clean test -DsuiteFile=01_testng_package.xml)
		Default as well (mvn clean test)
	4. Singleton Design pattern
		For loading properties file only once	
		And, different config.properties files for different env
	5. How to parse HTML response using
		Groovy GPath
		JSoup
	6. Convert RestAssuredCookie to SeleniumCookie
		And, inject Selenium Cookie into Browser
	7. Composition (has-a relationship)
		Many elements are common in some pages
			public class HomePage extends BasePage {
			private MyHeader myHeader;
			private ProductThumbnail productThumbnail;
	8. StaleElementReferenceException
		
	9. Factory Design Pattern
		
	10. OOPS in framework
		
----------------
Approach -
	Data-Driven testing using JSON file
----------------
Testing framework - TestNG

-------------------------------------------------
PENDING

1. Path for json -> Can we change it?
2. SignUpApi -> Endpoint.ACCOUNT.url? -> How to make it?
3. Allure reports -> Unable to generate it
4. 

